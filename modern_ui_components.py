"""
üé® –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
"""

from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import sys
from typing import Optional, List, Dict, Any

class ModernButton(QPushButton):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏"""
    
    def __init__(self, text: str = "", icon: Optional[QIcon] = None, 
                 color: str = "#FF2B43", parent=None):
        super().__init__(text, parent)
        self.base_color = color
        self.hover_color = self._lighten_color(color, 20)
        self.pressed_color = self._darken_color(color, 20)
        
        if icon:
            self.setIcon(icon)
            self.setIconSize(QSize(20, 20))
        
        self.setMinimumHeight(40)
        self.setCursor(Qt.PointingHandCursor)
        self._setup_style()
        self._setup_animations()
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet(f"""
            ModernButton {{
                background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                    stop:0 {self.base_color}, stop:1 {self._darken_color(self.base_color, 10)});
                border: none;
                border-radius: 8px;
                color: white;
                font-weight: bold;
                font-size: 14px;
                padding: 8px 16px;
            }}
            ModernButton:hover {{
                background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                    stop:0 {self.hover_color}, stop:1 {self._darken_color(self.hover_color, 10)});
            }}
            ModernButton:pressed {{
                background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                    stop:0 {self.pressed_color}, stop:1 {self._darken_color(self.pressed_color, 10)});
            }}
        """)
    
    def _setup_animations(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π"""
        self.animation = QPropertyAnimation(self, b"geometry")
        self.animation.setDuration(150)
        self.animation.setEasingCurve(QEasingCurve.OutCubic)
    
    def _lighten_color(self, color: str, amount: int) -> str:
        """–û—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞"""
        color = QColor(color)
        h, s, l, a = color.getHsl()
        l = min(255, l + amount)
        color.setHsl(h, s, l, a)
        return color.name()
    
    def _darken_color(self, color: str, amount: int) -> str:
        """–ó–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞"""
        color = QColor(color)
        h, s, l, a = color.getHsl()
        l = max(0, l - amount)
        color.setHsl(h, s, l, a)
        return color.name()

class ModernCard(QFrame):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–µ–Ω—å—é –∏ —Å–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —É–≥–ª–∞–º–∏"""
    
    def __init__(self, title: str = "", content_widget: Optional[QWidget] = None, 
                 parent=None):
        super().__init__(parent)
        self.setFrameStyle(QFrame.NoFrame)
        self._setup_ui(title, content_widget)
        self._setup_style()
    
    def _setup_ui(self, title: str, content_widget: Optional[QWidget]):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(15)
        
        if title:
            title_label = QLabel(title)
            title_label.setStyleSheet("""
                QLabel {
                    font-size: 18px;
                    font-weight: bold;
                    color: #333333;
                    margin-bottom: 10px;
                }
            """)
            layout.addWidget(title_label)
        
        if content_widget:
            layout.addWidget(content_widget)
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            ModernCard {
                background-color: white;
                border: 1px solid #E0E0E0;
                border-radius: 12px;
            }
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–Ω—å
        shadow = QGraphicsDropShadowEffect()
        shadow.setBlurRadius(15)
        shadow.setColor(QColor(0, 0, 0, 30))
        shadow.setOffset(0, 2)
        self.setGraphicsEffect(shadow)

class ModernProgressBar(QProgressBar):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setMinimumHeight(8)
        self.setMaximumHeight(8)
        self._setup_style()
        self._setup_animation()
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QProgressBar {
                border: none;
                border-radius: 4px;
                background-color: #F0F0F0;
                text-align: center;
            }
            QProgressBar::chunk {
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                    stop:0 #FF2B43, stop:1 #FF6B43);
                border-radius: 4px;
            }
        """)
    
    def _setup_animation(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏"""
        self.animation = QPropertyAnimation(self, b"value")
        self.animation.setDuration(500)
        self.animation.setEasingCurve(QEasingCurve.OutCubic)
    
    def setValueAnimated(self, value: int):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π"""
        self.animation.setStartValue(self.value())
        self.animation.setEndValue(value)
        self.animation.start()

class ModernTaskItem(QWidget):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏"""
    
    task_clicked = pyqtSignal(str)  # ID –∑–∞–¥–∞—á–∏
    task_completed = pyqtSignal(str)  # ID –∑–∞–¥–∞—á–∏
    
    def __init__(self, task_data: Dict[str, Any], parent=None):
        super().__init__(parent)
        self.task_data = task_data
        self.is_completed = task_data.get('status') == 'completed'
        self._setup_ui()
        self._setup_style()
    
    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QHBoxLayout(self)
        layout.setContentsMargins(15, 10, 15, 10)
        layout.setSpacing(15)
        
        # –ß–µ–∫–±–æ–∫—Å –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        self.checkbox = QCheckBox()
        self.checkbox.setChecked(self.is_completed)
        self.checkbox.toggled.connect(self._on_checkbox_toggled)
        layout.addWidget(self.checkbox)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_layout = QVBoxLayout()
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞—á–∏
        self.title_label = QLabel(self.task_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))
        self.title_label.setStyleSheet("""
            QLabel {
                font-size: 16px;
                font-weight: bold;
                color: #333333;
            }
        """)
        info_layout.addWidget(self.title_label)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        meta_text = []
        if 'priority' in self.task_data:
            meta_text.append(f"–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {self.task_data['priority']}")
        if 'duration' in self.task_data:
            meta_text.append(f"–í—Ä–µ–º—è: {self.task_data['duration']} –º–∏–Ω")
        
        if meta_text:
            self.meta_label = QLabel(" ‚Ä¢ ".join(meta_text))
            self.meta_label.setStyleSheet("""
                QLabel {
                    font-size: 12px;
                    color: #666666;
                }
            """)
            info_layout.addWidget(self.meta_label)
        
        layout.addLayout(info_layout, 1)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å)
        if 'progress' in self.task_data:
            self.progress_bar = ModernProgressBar()
            self.progress_bar.setValue(self.task_data['progress'])
            layout.addWidget(self.progress_bar)
        
        # –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π
        self.action_btn = ModernButton("‚ãØ", color="#666666")
        self.action_btn.setMaximumWidth(40)
        self.action_btn.clicked.connect(self._on_action_clicked)
        layout.addWidget(self.action_btn)
        
        self._update_completion_style()
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            ModernTaskItem {
                background-color: white;
                border: 1px solid #E0E0E0;
                border-radius: 8px;
                margin: 2px;
            }
            ModernTaskItem:hover {
                background-color: #F8F9FA;
                border-color: #FF2B43;
            }
        """)
        
        self.setCursor(Qt.PointingHandCursor)
    
    def _on_checkbox_toggled(self, checked: bool):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ–∫–±–æ–∫—Å–∞"""
        self.is_completed = checked
        self._update_completion_style()
        self.task_completed.emit(self.task_data.get('id', ''))
    
    def _on_action_clicked(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –¥–µ–π—Å—Ç–≤–∏–π"""
        self.task_clicked.emit(self.task_data.get('id', ''))
    
    def _update_completion_style(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏"""
        if self.is_completed:
            self.title_label.setStyleSheet("""
                QLabel {
                    font-size: 16px;
                    font-weight: bold;
                    color: #999999;
                    text-decoration: line-through;
                }
            """)
        else:
            self.title_label.setStyleSheet("""
                QLabel {
                    font-size: 16px;
                    font-weight: bold;
                    color: #333333;
                }
            """)
    
    def mousePressEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É"""
        if event.button() == Qt.LeftButton:
            self.task_clicked.emit(self.task_data.get('id', ''))
        super().mousePressEvent(event)

class ModernSearchBox(QLineEdit):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞"""
    
    def __init__(self, placeholder: str = "–ü–æ–∏—Å–∫...", parent=None):
        super().__init__(parent)
        self.setPlaceholderText(placeholder)
        self._setup_style()
        self._setup_search_icon()
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QLineEdit {
                border: 2px solid #E0E0E0;
                border-radius: 20px;
                padding: 8px 40px 8px 15px;
                font-size: 14px;
                background-color: white;
            }
            QLineEdit:focus {
                border-color: #FF2B43;
                outline: none;
            }
        """)
        self.setMinimumHeight(40)
    
    def _setup_search_icon(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø–æ–∏—Å–∫–∞"""
        search_action = QAction(self)
        search_action.setIcon(self.style().standardIcon(QStyle.SP_FileDialogDetailedView))
        self.addAction(search_action, QLineEdit.TrailingPosition)

class ModernTabWidget(QTabWidget):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç –≤–∫–ª–∞–¥–æ–∫"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self._setup_style()
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QTabWidget::pane {
                border: 1px solid #E0E0E0;
                border-radius: 8px;
                background-color: white;
            }
            QTabWidget::tab-bar {
                alignment: center;
            }
            QTabBar::tab {
                background-color: #F8F9FA;
                border: 1px solid #E0E0E0;
                border-bottom: none;
                border-top-left-radius: 8px;
                border-top-right-radius: 8px;
                padding: 12px 20px;
                margin-right: 2px;
                font-weight: bold;
                color: #666666;
            }
            QTabBar::tab:selected {
                background-color: white;
                color: #FF2B43;
                border-bottom: 2px solid #FF2B43;
            }
            QTabBar::tab:hover:!selected {
                background-color: #F0F0F0;
                color: #333333;
            }
        """)

class ModernSidebar(QWidget):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å"""
    
    item_clicked = pyqtSignal(str)  # –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.items = []
        self.selected_item = None
        self._setup_ui()
        self._setup_style()
    
    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.layout = QVBoxLayout(self)
        self.layout.setContentsMargins(0, 20, 0, 20)
        self.layout.setSpacing(5)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
        title_label.setStyleSheet("""
            QLabel {
                font-size: 16px;
                font-weight: bold;
                color: #333333;
                padding: 10px 20px;
            }
        """)
        self.layout.addWidget(title_label)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        separator = QFrame()
        separator.setFrameShape(QFrame.HLine)
        separator.setStyleSheet("QFrame { color: #E0E0E0; }")
        self.layout.addWidget(separator)
        
        self.layout.addStretch()
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            ModernSidebar {
                background-color: #F8F9FA;
                border-right: 1px solid #E0E0E0;
            }
        """)
        self.setFixedWidth(250)
    
    def add_item(self, name: str, icon: Optional[QIcon] = None):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å"""
        item_btn = QPushButton(name)
        if icon:
            item_btn.setIcon(icon)
        
        item_btn.setStyleSheet("""
            QPushButton {
                text-align: left;
                padding: 12px 20px;
                border: none;
                background-color: transparent;
                font-size: 14px;
                color: #666666;
            }
            QPushButton:hover {
                background-color: #E9ECEF;
                color: #333333;
            }
            QPushButton:checked {
                background-color: #FF2B43;
                color: white;
                font-weight: bold;
            }
        """)
        
        item_btn.setCheckable(True)
        item_btn.clicked.connect(lambda: self._on_item_clicked(name))
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ stretch
        self.layout.insertWidget(self.layout.count() - 1, item_btn)
        self.items.append((name, item_btn))
    
    def _on_item_clicked(self, name: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É"""
        # –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        for item_name, btn in self.items:
            btn.setChecked(item_name == name)
        
        self.selected_item = name
        self.item_clicked.emit(name)
    
    def select_item(self, name: str):
        """–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞"""
        self._on_item_clicked(name)

class ModernStatusBar(QStatusBar):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self._setup_style()
        self._setup_widgets()
    
    def _setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QStatusBar {
                background-color: #F8F9FA;
                border-top: 1px solid #E0E0E0;
                color: #666666;
                font-size: 12px;
            }
        """)
    
    def _setup_widgets(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–∂–µ—Ç–æ–≤"""
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
        self.status_label = QLabel("–ì–æ—Ç–æ–≤")
        self.addWidget(self.status_label)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        self.progress_bar = ModernProgressBar()
        self.progress_bar.setVisible(False)
        self.addPermanentWidget(self.progress_bar)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏
        self.time_label = QLabel()
        self.addPermanentWidget(self.time_label)
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        self.timer = QTimer()
        self.timer.timeout.connect(self._update_time)
        self.timer.start(1000)
        self._update_time()
    
    def _update_time(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏"""
        from datetime import datetime
        current_time = datetime.now().strftime("%H:%M:%S")
        self.time_label.setText(current_time)
    
    def show_progress(self, message: str = "–û–±—Ä–∞–±–æ—Ç–∫–∞..."):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"""
        self.status_label.setText(message)
        self.progress_bar.setVisible(True)
        self.progress_bar.setRange(0, 0)  # –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    
    def hide_progress(self):
        """–°–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"""
        self.status_label.setText("–ì–æ—Ç–æ–≤")
        self.progress_bar.setVisible(False)
    
    def set_progress(self, value: int, maximum: int = 100):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        self.progress_bar.setRange(0, maximum)
        self.progress_bar.setValueAnimated(value)
