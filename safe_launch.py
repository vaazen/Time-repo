# safe_launch.py - –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –æ—à–∏–±–æ–∫ —Ç–∞–π–º–µ—Ä–æ–≤
import sys
import os
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QHBoxLayout, QWidget, QPushButton, QLabel, QTabWidget
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtGui import QFont

# –ò–º–ø–æ—Ä—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
try:
    from localization_system import localization, _
    from task_manager import task_manager, Task, TaskStatus, TaskPriority
    CORE_MODULES_AVAILABLE = True
    print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π: {e}")
    CORE_MODULES_AVAILABLE = False
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    def _(text):
        return text
    
    class MockTaskManager:
        def get_all_tasks(self):
            return []
        def calculate_productivity_today(self):
            return {'productivity_percent': 0, 'total_tasks': 0}
    
    task_manager = MockTaskManager()

class SafeTimeBlockingApp(QMainWindow):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º —Å —Ç–∞–π–º–µ—Ä–∞–º–∏"""
    
    def __init__(self):
        super().__init__()
        self.setWindowTitle("üöÄ Time Blocking v4.0 - –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º")
        self.setGeometry(100, 100, 1200, 800)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
        self.init_ui()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è UI
        self.init_enhanced_features()
    
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        layout = QVBoxLayout()
        central_widget.setLayout(layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QLabel("‚è∞ Time Blocking Application v4.0")
        header.setStyleSheet("""
            font-size: 28px;
            font-weight: bold;
            color: #FF2B43;
            padding: 20px;
            text-align: center;
        """)
        header.setAlignment(Qt.AlignCenter)
        layout.addWidget(header)
        
        # –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π
        self.status_label = QLabel("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π...")
        self.status_label.setStyleSheet("""
            background: #2D2D2D;
            padding: 15px;
            border-radius: 8px;
            color: #CCCCCC;
            font-size: 14px;
        """)
        layout.addWidget(self.status_label)
        
        # –í–∫–ª–∞–¥–∫–∏
        self.tabs = QTabWidget()
        self.tabs.setStyleSheet("""
            QTabWidget::pane {
                border: 2px solid #FF2B43;
                border-radius: 8px;
                background: #1E1E1E;
            }
            QTabBar::tab {
                background: #2D2D2D;
                color: white;
                padding: 12px 20px;
                margin-right: 2px;
                border-top-left-radius: 8px;
                border-top-right-radius: 8px;
                font-weight: bold;
            }
            QTabBar::tab:selected {
                background: #FF2B43;
            }
        """)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞
        main_tab = self.create_main_tab()
        self.tabs.addTab(main_tab, "üìã –ì–ª–∞–≤–Ω–∞—è")
        
        # –í–∫–ª–∞–¥–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ)
        analytics_placeholder = QLabel("üìä –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...")
        analytics_placeholder.setAlignment(Qt.AlignCenter)
        analytics_placeholder.setStyleSheet("color: #888; font-size: 16px; padding: 50px;")
        self.tabs.addTab(analytics_placeholder, "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
        
        layout.addWidget(self.tabs)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
        self.setStyleSheet("""
            QMainWindow {
                background: #1E1E1E;
                color: white;
            }
            QWidget {
                background: #1E1E1E;
                color: white;
            }
            QPushButton {
                background: #FF2B43;
                color: white;
                border: none;
                padding: 12px 24px;
                font-size: 14px;
                border-radius: 6px;
                font-weight: bold;
                min-width: 120px;
                min-height: 40px;
            }
            QPushButton:hover {
                background: #FF4A5F;
            }
        """)
    
    def create_main_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏"""
        widget = QWidget()
        layout = QVBoxLayout()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
        info_text = """
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Time Blocking v4.0!

‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ üß† –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –º–∞—à–∏–Ω–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º
‚Ä¢ üìä –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
‚Ä¢ üé® Drag & Drop –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚Ä¢ ‚òÅÔ∏è –û–±–ª–∞—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
‚Ä¢ ‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

üöÄ –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π:
"""
        
        info_label = QLabel(info_text)
        info_label.setStyleSheet("""
            background: rgba(255, 43, 67, 0.1);
            border: 2px solid #FF2B43;
            border-radius: 10px;
            padding: 20px;
            color: white;
            font-size: 14px;
            line-height: 1.6;
        """)
        layout.addWidget(info_label)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        buttons_layout = QHBoxLayout()
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏
        full_version_btn = QPushButton("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é")
        full_version_btn.clicked.connect(self.launch_full_version)
        
        # –ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        test_analytics_btn = QPushButton("üìä –¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")
        test_analytics_btn.clicked.connect(self.test_analytics)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_btn = QPushButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        settings_btn.clicked.connect(self.show_settings)
        
        buttons_layout.addWidget(full_version_btn)
        buttons_layout.addWidget(test_analytics_btn)
        buttons_layout.addWidget(settings_btn)
        buttons_layout.addStretch()
        
        layout.addLayout(buttons_layout)
        layout.addStretch()
        
        widget.setLayout(layout)
        return widget
    
    def init_enhanced_features(self):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
        status_messages = []
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
            if CORE_MODULES_AVAILABLE:
                status_messages.append("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏: –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–∞—Ö
                try:
                    tasks = task_manager.get_all_tasks()
                    productivity = task_manager.calculate_productivity_today()
                    status_messages.append(f"üìã –ó–∞–¥–∞—á –≤—Å–µ–≥–æ: {len(tasks)}")
                    status_messages.append(f"üìä –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è: {productivity.get('productivity_percent', 0)}%")
                except Exception as e:
                    status_messages.append(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á: {e}")
            else:
                status_messages.append("‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
            self.smart_notifications = None
            self.analytics_widget = None
            self.performance_optimizer = None
            
            # –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            try:
                from smart_notifications import get_smart_notification_manager
                self.smart_notifications = get_smart_notification_manager()
                status_messages.append("‚úÖ –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –∞–∫—Ç–∏–≤–Ω—ã")
            except ImportError as e:
                if "matplotlib" in str(e) or "numpy" in str(e) or "pandas" in str(e):
                    status_messages.append("‚ö†Ô∏è –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: —Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
                    status_messages.append("   pip install matplotlib numpy pandas")
                else:
                    status_messages.append(f"‚ö†Ô∏è –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {str(e)[:40]}...")
            except Exception as e:
                status_messages.append(f"‚ö†Ô∏è –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {str(e)[:40]}...")
            
            # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
            try:
                from advanced_analytics import get_advanced_analytics_widget
                self.analytics_widget = get_advanced_analytics_widget()
                status_messages.append("‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞: –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                
                # –ó–∞–º–µ–Ω—è–µ–º placeholder –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
                if self.analytics_widget:
                    self.tabs.removeTab(1)
                    self.tabs.insertTab(1, self.analytics_widget, "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
                    
            except ImportError as e:
                if "matplotlib" in str(e) or "seaborn" in str(e):
                    status_messages.append("‚ö†Ô∏è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: —Ç—Ä–µ–±—É–µ—Ç—Å—è matplotlib –∏ seaborn")
                    status_messages.append("   pip install matplotlib seaborn")
                else:
                    status_messages.append(f"‚ö†Ô∏è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: {str(e)[:40]}...")
            except Exception as e:
                status_messages.append(f"‚ö†Ô∏è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: {str(e)[:40]}...")
            
            # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            try:
                from performance_optimizer import get_performance_optimizer
                self.performance_optimizer = get_performance_optimizer()
                status_messages.append("‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –≤–∫–ª—é—á–µ–Ω–∞")
            except Exception as e:
                status_messages.append(f"‚ö†Ô∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: {str(e)[:40]}...")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            status_text = "\n".join(status_messages)
            self.status_label.setText(f"üìä –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π:\n{status_text}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            if any("—Ç—Ä–µ–±—É–µ—Ç—Å—è" in msg for msg in status_messages):
                self.add_installation_instructions()
            
        except Exception as e:
            self.status_label.setText(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
    
    def add_installation_instructions(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ"""
        instructions_text = """
üîß –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:

pip install matplotlib seaborn numpy pandas requests dropbox openpyxl reportlab

–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
        """
        
        instructions_label = QLabel(instructions_text)
        instructions_label.setStyleSheet("""
            background: rgba(255, 193, 7, 0.1);
            border: 2px solid #FFC107;
            border-radius: 8px;
            padding: 15px;
            color: #FFC107;
            font-size: 12px;
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        main_tab = self.tabs.widget(0)
        if main_tab and hasattr(main_tab, 'layout'):
            main_tab.layout().addWidget(instructions_label)
    
    def launch_full_version(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            from hybrid_app import HybridTimeBlockingApp
            self.full_app = HybridTimeBlockingApp()
            self.full_app.show()
            self.status_label.setText("üöÄ –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ!")
        except Exception as e:
            self.status_label.setText(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏: {e}")
    
    def test_analytics(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
        if self.analytics_widget:
            self.tabs.setCurrentIndex(1)
            self.status_label.setText("üìä –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
        else:
            self.status_label.setText("‚ö†Ô∏è –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    def show_settings(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        self.status_label.setText("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏")

def main():
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    app = QApplication(sys.argv)
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Time Blocking v4.0 –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ...")
    print("üîß –≠—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ —Å QTimer –∏ –ø–æ—Ç–æ–∫–∞–º–∏")
    
    # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    window = SafeTimeBlockingApp()
    window.show()
    
    print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!")
    print("üí° –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º")
    
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
