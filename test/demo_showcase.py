# demo_showcase.py - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import time
import json
from datetime import datetime
from task_manager import task_manager
from localization_system import localization

def show_current_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    print("\n" + "="*60)
    print("–¢–ï–ö–£–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("="*60)
    
    # –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    moscow_time = localization.get_moscow_time()
    print(f"–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {moscow_time.strftime('%H:%M:%S %d.%m.%Y')}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á
    productivity_data = task_manager.calculate_productivity_today()
    print(f"\n–ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:")
    print(f"   –í—Å–µ–≥–æ: {productivity_data['total_tasks']}")
    print(f"   –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {productivity_data['completed_tasks']}")
    print(f"   –í –æ–∂–∏–¥–∞–Ω–∏–∏: {productivity_data['pending_tasks']}")
    
    print(f"\n–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {productivity_data['productivity_percent']:.1f}%")
    print(f"   –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏: {productivity_data['efficiency']:.1f}%")
    
    print(f"\n–í—Ä–µ–º—è:")
    print(f"   –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {productivity_data['total_time_planned']} –º–∏–Ω")
    print(f"   –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {productivity_data['total_time_completed']} –º–∏–Ω")
    
    # –ù–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    weekly_stats = task_manager.get_weekly_stats()
    print(f"\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é:")
    for day_stat in weekly_stats[-7:]:
        print(f"   {day_stat['day_name']}: {day_stat['productivity']:.1f}% ({day_stat['completed_tasks']}/{day_stat['total_tasks']})")

def show_language_demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç–∏"""
    print("\n" + "="*60)
    print("üåê –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–ù–û–ì–û–Ø–ó–´–ß–ù–û–°–¢–ò")
    print("="*60)
    
    languages = localization.get_supported_languages()
    
    for lang_code, lang_name in languages.items():
        localization.set_language(lang_code)
        print(f"\nüó£Ô∏è {lang_name} ({lang_code}):")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {localization.get_text('app_title')}")
        print(f"   –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É: {localization.get_text('add_task')}")
        print(f"   –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {localization.get_text('productivity')}")
        print(f"   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {localization.get_text('completed_tasks')}")
        print(f"   –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {localization.get_text('moscow_time')}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
    localization.set_language("ru")

def show_task_details():
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á"""
    print("\n" + "="*60)
    print("üìã –î–ï–¢–ê–õ–ò –ó–ê–î–ê–ß –ù–ê –°–ï–ì–û–î–ù–Ø")
    print("="*60)
    
    today_tasks = task_manager.get_tasks_for_today()
    
    if not today_tasks:
        print("‚ùå –ù–µ—Ç –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
        return
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    today_tasks.sort(key=lambda t: t.start_time)
    
    for i, task in enumerate(today_tasks, 1):
        status_emoji = {
            'planned': '‚è≥',
            'in_progress': 'üîÑ', 
            'completed': '‚úÖ',
            'cancelled': '‚ùå'
        }
        
        priority_emoji = {
            'low': 'üîµ',
            'medium': 'üü°',
            'high': 'üü†', 
            'urgent': 'üî¥'
        }
        
        print(f"\n{i}. {task.title}")
        print(f"   {status_emoji.get(task.status.value, '‚ùì')} –°—Ç–∞—Ç—É—Å: {task.status.value}")
        print(f"   {priority_emoji.get(task.priority.value, '‚ö™')} –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {task.priority.value}")
        print(f"   ‚è∞ –í—Ä–µ–º—è: {task.start_time.strftime('%H:%M')} - {task.end_time.strftime('%H:%M')}")
        print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {task.description}")
        print(f"   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {task.get_duration_minutes()} –º–∏–Ω")

def show_file_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö"""
    print("\n" + "="*60)
    print("üìÅ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –§–ê–ô–õ–ê–• –ü–†–û–ï–ö–¢–ê")
    print("="*60)
    
    import os
    
    files_info = [
        ("hybrid_app.py", "–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"),
        ("localization_system.py", "–°–∏—Å—Ç–µ–º–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏"),
        ("task_manager.py", "–ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á"),
        ("demo_tasks.py", "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"),
        ("performance.cpp", "C++ –º–æ–¥—É–ª—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"),
        ("data_processor.rs", "Rust –º–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö"),
        ("build_modules.py", "–°–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∫–∏"),
        ("tasks_data.json", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ"),
        ("requirements_updated.txt", "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    ]
    
    for filename, description in files_info:
        if os.path.exists(filename):
            size = os.path.getsize(filename)
            size_kb = size / 1024
            print(f"üìÑ {filename:<25} | {description:<30} | {size_kb:.1f} KB")
        else:
            print(f"‚ùå {filename:<25} | {description:<30} | –ù–µ –Ω–∞–π–¥–µ–Ω")

def show_architecture_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ"""
    print("\n" + "="*60)
    print("üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("="*60)
    
    print("""
üêç PYTHON (–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä)
‚îú‚îÄ‚îÄ PyQt5 GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚îú‚îÄ‚îÄ –°–∏—Å—Ç–µ–º–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ (3 —è–∑—ã–∫–∞)
‚îú‚îÄ‚îÄ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ (CRUD)
‚îú‚îÄ‚îÄ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
‚îî‚îÄ‚îÄ Fallback —Å–∏—Å—Ç–µ–º–∞

üü® JAVASCRIPT (Dashboard)
‚îú‚îÄ‚îÄ Chart.js –≥—Ä–∞—Ñ–∏–∫–∏
‚îú‚îÄ‚îÄ –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (–º–æ—Å–∫–æ–≤—Å–∫–æ–µ)
‚îú‚îÄ‚îÄ CSS3 –∞–Ω–∏–º–∞—Ü–∏–∏
‚îú‚îÄ‚îÄ Responsive –¥–∏–∑–∞–π–Ω
‚îî‚îÄ‚îÄ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã

‚ö° C++ (–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
‚îú‚îÄ‚îÄ –ë—ã—Å—Ç—Ä—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
‚îú‚îÄ‚îÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
‚îú‚îÄ‚îÄ –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ä–∞–±–æ—Ç—ã
‚îú‚îÄ‚îÄ –ë–µ–Ω—á–º–∞—Ä–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
‚îî‚îÄ‚îÄ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏

ü¶Ä RUST (–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
‚îú‚îÄ‚îÄ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ø–∞–º—è—Ç—å—é
‚îú‚îÄ‚îÄ JSON –ø–∞—Ä—Å–∏–Ω–≥ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è
‚îú‚îÄ‚îÄ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
‚îú‚îÄ‚îÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
‚îî‚îÄ‚îÄ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    """)

def show_demo_commands():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("\n" + "="*60)
    print("üöÄ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò")
    print("="*60)
    
    commands = [
        ("python hybrid_app.py", "–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"),
        ("python demo_tasks.py", "–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á"),
        ("python build_modules.py", "–°–±–æ—Ä–∫–∞ C++ –∏ Rust –º–æ–¥—É–ª–µ–π"),
        ("python demo_showcase.py", "–≠—Ç–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"),
    ]
    
    for command, description in commands:
        print(f"üíª {command:<30} | {description}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í HYBRID TIME BLOCKING PLANNER!")
    print("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã
    show_current_stats()
    time.sleep(1)
    
    show_language_demo()
    time.sleep(1)
    
    show_task_details()
    time.sleep(1)
    
    show_file_info()
    time.sleep(1)
    
    show_architecture_info()
    time.sleep(1)
    
    show_demo_commands()
    
    print("\n" + "="*60)
    print("üéØ –ò–¢–û–ì–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø")
    print("="*60)
    
    print(f"""
‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 3 —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚úÖ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏

üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
   python hybrid_app.py

üìä –¢–µ–∫—É—â–∞—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {task_manager.calculate_productivity_today()['productivity_percent']:.1f}%
‚è∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {localization.format_moscow_time()}

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ! üéâ
    """)

if __name__ == "__main__":
    main()
